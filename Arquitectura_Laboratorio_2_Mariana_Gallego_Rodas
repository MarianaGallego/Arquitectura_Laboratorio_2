.data

	filename: .asciiz "C:/Users/maria/OneDrive/Escritorio/Arquitectura_Laboratorio_2/input.txt"
	mensajeAEncriptar: .space 1024
	errorMessage: .asciiz "No se leyó el archivo correctamente"

	ClaveMultiplicativa: .asciiz "\n Digite la clave multiplicativa que desea utilizar: "
	ClaveAditiva: .asciiz "\n Digite la clave aditiva que desea utilizar: "


.text
	main:
	
		#Ingresar claves
		#jal leerClaves
	
		#Ingresar mensaje
		jal leerMensaje
		
		#Encriptar mensaje
		#jal encriptarMensaje
	
	li $v0, 10
	syscall
	

	#------------------------------------ DECLARACIÓN DE FUNCIONES ------------------------------------#

	leerClaves:

		#---------------------- Clave multiplicativa ----------------------#

		#mostrar string
		li $v0, 4
		la $a0, ClaveMultiplicativa
		syscall
		
		#leer entero
		li $v0, 5
		syscall
		
		#Hacer espacio en memoria y guardar
		addi $sp, $sp, -4
		sw $v0, 0($sp)

		
		#------------------------- Clave aditiva -------------------------#

		#mostrar string
		li $v0, 4
		la $a0, ClaveAditiva
		syscall
		
		#leer entero
		li $v0, 5
		syscall
		
		#Hacer espacio en memoria y guardar
		addi $sp, $sp, -4
		sw $v0, 0($sp)
		
	jr $ra
	


	leerMensaje:

		#------------------------- Abrir archivo -------------------------#

		# Abrir el archivo
    		li $v0, 13
    		la $a0, filename
    		li $a1, 0
    		li $a2, 0
    		syscall
    		move $t0, $v0

    		
    		bltz $t0, errorHandler
    		
    		#------------------------- Leer archivo -------------------------#

    		li $v0, 14
    		move $a0, $t0
    		la $a1, mensajeAEncriptar
    		li $a2, 1024
    		syscall

		# Guardar el string leído en la pila byte por byte usando `sb`
		la $t1, mensajeAEncriptar
		addi $sp, $sp, -1024
		li $t2, 0


		#----------------- Guardar cada byte en la pila -----------------#

		storeWhile:
			lb $t3, 0($t1)
			sb $t3, 0($sp)

			# Incrementar el contador y avanzar
			addi $t1, $t1, 1
			addi $sp, $sp, 1
			addi $t2, $t2, 1
		
			beqz $t3, endStoreWhile
		
			j storeWhile
		endStoreWhile:

		# Restaurar el puntero de la pila al inicio del string guardado
		sub $sp, $sp, $t2


		#-------------- Mostrar cada byte que hay la pila --------------#

		mostrarLoop:
			lb $a0, 0($sp)                 # Cargar un byte desde la pila
			beqz $a0, endMostrar           # Si es null terminador, salir
			li $v0, 11                     # Syscall para imprimir carácter
			syscall
		
			# Avanzar
			addi $sp, $sp, 1               # Mover la pila hacia adelante
			j mostrarLoop                  # Repetir el ciclo
		endMostrar:
	jr $ra
	
	errorHandler:
		li $v0, 4
    		la $a0, errorMessage
    		syscall
	jr $ra



	encriptarMensaje:

		la $s0, mensajeAEncriptar
		
		#Clave aditiva
		lw $t0, 0($sp)
		
		#Clave multiplicativa
		lw $t1, 4($sp)
		
		add $t2, $zero, $zero # inicializar i = 0

		while:
			add $t3, $t2, $s0
			
			lb $t4, 0($t3)
			beq $t4, $zero, endWhile
			
			#----------------- Convertir de ASCII a valor en el alfabeto -----------------#

    			li $t5, 97
    			sub $t6, $t4, $t5

    			# Aplicar el cifrado afín
    			mul $t6, $t6, $t1
    			add $t6, $t6, $t0
    			li $t7, 26
    			rem $t6, $t6, $t7

			#----------------- Convertir de vuelta al valor ASCII -----------------#

    			add $t4, $t6, $t5
			
			li $v0, 11
			move $a0, $t4
			syscall
			
			addi $t2, $t2, 1
			j while
		endWhile:
	jr $ra
