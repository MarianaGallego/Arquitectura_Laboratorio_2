.data

	digiteMensaje: .asciiz "Por favor, ingrese el mensaje que desea encriptar: "
	digiteClaveMultiplicativa: .asciiz "\n Digite la clave multiplicativa que desea utilizar: "
	digiteClaveAditiva: .asciiz "\n Digite la clave aditiva que desea utilizar: "
	
	mensajeAEncriptar: .space 12

.text
	main:
	
		#Ingresar claves
		jal leerClaves
	
		#Ingresar mensaje
		jal leerMensaje
		
		jal encriptarMensaje
	
	li $v0, 10
	syscall
	
	#Declaracion de funciones ------------------------------------
	leerClaves:
		#Clave multiplicativa
		#mostrar string
		li $v0, 4
		la $a0, digiteClaveMultiplicativa
		syscall
		
		#leer entero
		li $v0, 5
		syscall
		
		#Hacer espacio en memoria y guardar
		addi $sp, $sp, -4
		sw $v0, 0($sp)
		
		#Clave aditiva
		#mostrar string
		li $v0, 4
		la $a0, digiteClaveAditiva
		syscall
		
		#leer entero
		li $v0, 5
		syscall
		
		#Hacer espacio en memoria y guardar
		addi $sp, $sp, -4
		sw $v0, 0($sp)
		
	jr $ra
	
	leerMensaje:
		#mostrar string
		li $v0, 4
		la $a0, digiteMensaje
		syscall
		
		#leer string
		li $v0, 8
		la $a0, mensajeAEncriptar
		li $a1, 12
		syscall
		
    		lb $t0, 11($a0)              # Leer el último byte del string leído
    		beqz $t0, endLeerMensaje     # Si ya es nulo, saltar
    		sb $zero, 11($a0)            # Si no es nulo, añadir '\0' al final del string
		
		#Hacer espacio en memoria y guardar
		addi $sp, $sp, -12
		sw $a0, 0($sp)
		
		addi $sp, $sp, 20
		
		endLeerMensaje:
	jr $ra

	encriptarMensaje:
		la $s0, mensajeAEncriptar
		
		#Aditiva
		lw $t0, 0($sp)
		
		#Multiplicativa
		lw $t1, 4($sp)
		
		add $t2, $zero, $zero # inicializar i = 0
		while:
			add $t3, $t2, $s0
			
			lb $t4, 0($t3)
			beq $t4, $zero, endWhile
			
			# Convertir de ASCII a valor en el alfabeto (minúsculas)
    			li $t5, 97                   # ASCII de 'a'
    			sub $t6, $t4, $t5            # 'a' = 0, 'b' = 1, ..., 'z' = 25

    			# Aplicar el cifrado afín E(x) = (a * x + b) mod 26
    			mul $t6, $t6, $t1            # Multiplicar por a
    			add $t6, $t6, $t0            # Sumar b (usar $t4 como clave aditiva)
    			li $t7, 26                   # Tamaño del alfabeto (mod 26)
    			rem $t6, $t6, $t7            # Tomar el módulo 26

    			# Convertir de vuelta al valor ASCII (minúsculas)
    			add $t4, $t6, $t5            # Volver al rango ASCII (sumar 97)
			
			li $v0, 11
			move $a0, $t4
			syscall
			
			addi $t2, $t2, 1
			j while
		endWhile:
	jr $ra